version: 2
models:
  - name: ethereum__erc20_balances
    description: Daily ERC20 Balances
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - BALANCE_DATE
            - USER_ADDRESS
            - CONTRACT_ADDRESS
          where: balance_date >= current_date - 2
    columns:
      - name: ADDRESS_NAME
        description: "The name of the address, if we have one, i.e. the name of a dapp or an exchange. When exchanges are found algorithmically, a number is assigned when groups of addresses belonging to a single exchange are identifiable."
        tests:
          - not_null:
              config:
                enabled: false
      - name: AMOUNT_USD
        description: USD Value of the token balance
        tests:
          - not_null:
              config:
                enabled: false
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - decimal
                - float
      - name: NON_ADJUSTED_BALANCE
        description: Latest recorded non_adjusted_balance for that given day and token.
        tests:
          - not_null
      - name: BALANCE_DATE
        description: Day the balance was recorded on
        tests:
          - not_null
          - dbt_expectations.expect_row_values_to_have_recent_data:
              datepart: day
              interval: 3
      - name: CONTRACT_ADDRESS
        description: Token contract address
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
              # config:
              #   enabled: false
      - name: CONTRACT_LABEL
        description: Name of the contract address if we have one.
        tests:
          - not_null:
              config:
                enabled: false
      - name: LABEL
        description: "The name of the project, if we have one, i.e. the name of a dapp or an exchange. When exchanges are found algorithmically, a number is assigned when groups of addresses belonging to a single exchange are identifiable."
        tests:
          - not_null:
              config:
                enabled: false
      - name: LABEL_SUBTYPE
        description: "Low level address label category breaking down the l1_label, for example: distributor breaks into distributor_cex (centralized exchange hot wallets), distributor_cex_satellite and distributor_dex."
        tests:
          - not_null:
              config:
                enabled: false
      - name: LABEL_TYPE
        description: "High level address label category: Distributor, Project, Operator, User, Other. Distributor == exchanges. Project is anything related to a dapp, smart contract, or the blockchain’s oversight addresses. Operators are nodes and miners. User is an actual person using a chain. Other is anything that has a label but doesn’t fall into one of the other categories (single use and bots, for example)."
        tests:
          - not_null:
              config:
                enabled: false
      - name: PRICE
        description: Average price of the token for that day
        tests:
          - not_null:
              config:
                enabled: false
      - name: SYMBOL
        description: Token Symbol
        tests:
          - not_null:
              config:
                enabled: false
      - name: USER_ADDRESS
        description: Address that the balance is for
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
              # config:
              #   enabled: false
