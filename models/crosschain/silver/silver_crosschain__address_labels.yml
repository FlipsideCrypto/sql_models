version: 2
models:
  - name: silver_crosschain__address_labels
    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - BLOCKCHAIN
            - CREATOR
            - ADDRESS
    columns:
      - name: BLOCKCHAIN
        description: The name of the blockchain
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_set:
              value_set: ['ethereum', 'flow', 'polygon', 'terra', 'algorand', 'solana', 'moonriver', 'avalanche', 'bittorrent', 'cronos', 'fantom', 'arbitrum', 'aurora', 'bsc', 'heco', 'optimism', 'gnosis', 'thorchain']
      - name: CREATOR
        description: The name of the creator of the label
        tests:
          - not_null
      - name: INSERT_DATE
        description: The date the label was inserted in the table
        tests:
          - not_null
      - name: L1_LABEL
        description: A high-level category describing the addresses main function or ownership
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_set:
              value_set: ['flotsam', 'nft', 'defi', 'dex', 'cex', 'dapp', 'token', 'operator', 'layer2', 'chadmin']
      - name: L2_LABEL
        description: A sub-category nested within label type providing further detail
        tests:
          - not_null
      - name: PROJECT_NAME
        description: Name of the controlling entity of the address
        tests:
          - not_null
      - name: ADDRESS
        description: Address that the label is for. This is the field that should be used to join other tables with labels. 
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
              where: BLOCKCHAIN in ('ethereum','polygon', 'moonriver', 'avalanche', 'bittorrent', 'cronos', 'fantom', 'arbitrum', 'aurora')
              enabled: False # Kafka issues being fixed - can't delete labels
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: terra[0-9a-z]{39,39}
              where: BLOCKCHAIN = 'terra'
              enabled: False 
          - dbt_expectations.expect_column_value_lengths_to_equal:
              value: 58
              where: BLOCKCHAIN = 'algorand'